# GitHub Actions Workflow for MathLib
# 
# This workflow provides comprehensive CI/CD for the MathLib project:
# 1. Test: Runs unit tests with coverage on Ubuntu
# 2. Build: Builds the application for Azure deployment on Windows  
# 3. Package: Creates and publishes NuGet packages to GitHub Packages
# 4. Deploy: Deploys to Azure Web App (production environment)
#
# Triggers:
# - Push to main branch: Full pipeline including deployment
# - Push to version tags (v*.*.*): Full pipeline with release versioning
# - Pull requests to main: Test and build only
# - Manual dispatch: Full pipeline
#
# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build, Test, Package and Deploy MathLib

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Trigger on version tags
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: "**/TestResults/**/*"

  build:
    runs-on: windows-latest
    needs: test
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ./publish

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./publish

  package:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for GitVersion

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Determine version
        id: version
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v(.*)$ ]]; then
            VERSION=${BASH_REMATCH[1]}
          else
            VERSION="1.0.0-preview.$(date +%Y%m%d%H%M%S)"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"

      - name: Build library
        run: dotnet build src/MathLib/MathLib.csproj --configuration Release --no-restore

      - name: Create NuGet package
        run: |
          dotnet pack src/MathLib/MathLib.csproj \
            --configuration Release \
            --no-build \
            --output ./packages \
            /p:Version=${{ steps.version.outputs.VERSION }} \
            /p:PackageVersion=${{ steps.version.outputs.VERSION }} \
            /p:AssemblyVersion=${{ steps.version.outputs.VERSION }} \
            /p:FileVersion=${{ steps.version.outputs.VERSION }}

      - name: Configure GitHub Packages
        run: |
          dotnet nuget add source \
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --name "github" \
            --username "${{ github.repository_owner }}" \
            --password "${{ secrets.GITHUB_TOKEN }}" \
            --store-password-in-clear-text

      - name: Push to GitHub Packages
        run: |
          dotnet nuget push ./packages/*.nupkg \
            --source "github" \
            --api-key "${{ secrets.GITHUB_TOKEN }}" \
            --skip-duplicate

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./packages/*.nupkg

  deploy:
    runs-on: windows-latest
    needs: [build, package]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'math-lib'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_96F1906777F441C2A38981B95B3395E8 }}